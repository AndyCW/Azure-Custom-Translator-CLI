// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace CustomTranslator.Models
{
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// A class containing references to documents and corresponding processed
    /// documents.
    /// </summary>
    public partial class DocumentInstance
    {
        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsTextTranslatorDocumentInstance class.
        /// </summary>
        public DocumentInstance()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsTextTranslatorDocumentInstance class.
        /// </summary>
        /// <param name="documentInfo">Gets or sets the document</param>
        /// <param name="processedDocumentInfo">Gets or sets the processed
        /// document</param>
        public DocumentInstance(DocumentInfo documentInfo = default(DocumentInfo), ProcessedDocumentInfo processedDocumentInfo = default(ProcessedDocumentInfo))
        {
            DocumentInfo = documentInfo;
            ProcessedDocumentInfo = processedDocumentInfo;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the document
        /// </summary>
        [JsonProperty(PropertyName = "documentInfo")]
        public DocumentInfo DocumentInfo { get; set; }

        /// <summary>
        /// Gets or sets the processed document
        /// </summary>
        [JsonProperty(PropertyName = "processedDocumentInfo")]
        public ProcessedDocumentInfo ProcessedDocumentInfo { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="Microsoft.Rest.ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (DocumentInfo != null)
            {
                DocumentInfo.Validate();
            }
            if (ProcessedDocumentInfo != null)
            {
                ProcessedDocumentInfo.Validate();
            }
        }
    }
}
