// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Class containing a test entry.
    /// </summary>
    public partial class TextTranslatorModelsTextTranslatorTestEntry
    {
        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsTextTranslatorTestEntry class.
        /// </summary>
        public TextTranslatorModelsTextTranslatorTestEntry()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsTextTranslatorTestEntry class.
        /// </summary>
        /// <param name="source">Gets the source string</param>
        /// <param name="target">Gets the target string</param>
        /// <param name="referenceString">Gets the reference string. May be
        /// null.</param>
        public TextTranslatorModelsTextTranslatorTestEntry(string source, string target, string referenceString = default(string))
        {
            Source = source;
            Target = target;
            ReferenceString = referenceString;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets the source string
        /// </summary>
        [JsonProperty(PropertyName = "source")]
        public string Source { get; set; }

        /// <summary>
        /// Gets the target string
        /// </summary>
        [JsonProperty(PropertyName = "target")]
        public string Target { get; set; }

        /// <summary>
        /// Gets the reference string. May be null.
        /// </summary>
        [JsonProperty(PropertyName = "referenceString")]
        public string ReferenceString { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Source == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Source");
            }
            if (Target == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Target");
            }
        }
    }
}
