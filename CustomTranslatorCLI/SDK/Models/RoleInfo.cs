// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace CustomTranslator.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// Information about a users role in a workspace.
    /// </summary>
    public partial class RoleInfo
    {
        /// <summary>
        /// Initializes a new instance of the TextTranslatorModelsRoleInfo
        /// class.
        /// </summary>
        public RoleInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TextTranslatorModelsRoleInfo
        /// class.
        /// </summary>
        /// <param name="id">Gets or sets the id for this role.</param>
        /// <param name="roleName">Gets or sets the name of this role.</param>
        public RoleInfo(int id, string roleName)
        {
            Id = id;
            RoleName = roleName;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the id for this role.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int Id { get; set; }

        /// <summary>
        /// Gets or sets the name of this role.
        /// </summary>
        [JsonProperty(PropertyName = "roleName")]
        public string RoleName { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (RoleName == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "RoleName");
            }
        }
    }
}
