// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TextTranslatorModelsTextTranslatorModelInfo
    {
        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsTextTranslatorModelInfo class.
        /// </summary>
        public TextTranslatorModelsTextTranslatorModelInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsTextTranslatorModelInfo class.
        /// </summary>
        /// <param name="id">Gets or sets the model Id.</param>
        /// <param name="name">Gets or sets the name of the model.</param>
        /// <param name="projectId">Gets or sets the Id of the project to which
        /// the model belongs.</param>
        /// <param name="modifiedDate">Gets or sets ModifiedDate</param>
        /// <param name="createdDate">Gets or sets CreatedDate</param>
        /// <param name="createdBy">Gets the user of the creator of this
        /// model.</param>
        /// <param name="modifiedBy">Gets the user of who last modified this
        /// model.</param>
        /// <param name="modelStatus">The status of the model training.
        /// Possible values include: 'unknown', 'dataProcessing', 'submitted',
        /// 'trainingQueued', 'running', 'succeeded', 'trainingFailed',
        /// 'deploying', 'deployed', 'undeploying', 'undeployed',
        /// 'dataProcessingFailed', 'deploymentFailed', 'migratedDraft',
        /// 'updatingDeployment', 'draft', 'hubDeployed'</param>
        /// <param name="isTuningAuto">Gets or sets IsTuningAuto</param>
        /// <param name="isTestingAuto">Gets or sets IsTestingAuto</param>
        /// <param name="isAutoDeploy">Gets or sets IsAutoDeploy</param>
        /// <param name="autoDeployThreshold">Gets or sets the auto deployment
        /// bleu score diff threshold. Auto-deploy will occur when the
        /// bleu score threshold meets or exceeds the specified
        /// minimum.</param>
        /// <param name="modelIdentifier">Gets the Identifier with which this
        /// sytem can be used for translations through our translate API. This
        /// field is autogenerated by the
        /// system when the model is deployed.</param>
        /// <param name="documents">Gets or sets the list of documents used for
        /// training this model</param>
        /// <param name="modelRegionStatuses">Gets or sets the Regions this
        /// model is deployed in</param>
        /// <param name="baselineBleuScorePunctuated">Gets or sets baseline
        /// BleuScore (case-sensitive, punctuated).</param>
        /// <param name="bleuScorePunctuated">Gets or sets BleuScore
        /// (case-sensitive, punctuated).</param>
        /// <param name="baselineBleuScoreUnpunctuated">Gets or sets baseline
        /// BleuScore (case-sensitive, Unpunctuated).</param>
        /// <param name="bleuScoreUnpunctuated">Gets or sets BleuScore
        /// (case-sensitive, Unpunctuated).</param>
        /// <param name="baselineBleuScoreCIPunctuated">Gets or sets baseline
        /// BleuScore (case-insensitive, punctuated).</param>
        /// <param name="bleuScoreCIPunctuated">Gets or sets BleuScore
        /// (case-insensitive, punctuated).</param>
        /// <param name="baselineBleuScoreCIUnpunctuated">Gets or sets baseline
        /// BleuScore (case-insensitive, Unpunctuated).</param>
        /// <param name="bleuScoreCIUnpunctuated">Gets or sets BleuScore
        /// (case-insensitive, Unpunctuated).</param>
        /// <param name="startDate">Gets or sets StartDate</param>
        /// <param name="completionDate">Gets or sets CompletionDate</param>
        /// <param name="trainingSentenceCount">Gets or sets
        /// TrainingSentenceCount</param>
        /// <param name="tuningSentenceCount">Gets or sets
        /// TuningSentenceCount</param>
        /// <param name="testingSentenceCount">Gets or sets
        /// TestingSentenceCount</param>
        /// <param name="phraseDictionarySentenceCount">Gets or sets
        /// DictionarySentenceCount</param>
        /// <param name="sentenceDictionarySentenceCount">Gets or sets
        /// DictionarySentenceCount</param>
        /// <param name="monolingualSentenceCount">Gets or sets
        /// MonolingualSentenceCount</param>
        /// <param name="statusInfo">Gets or sets StatusInfo</param>
        /// <param name="hubBLEUScore">Gets or sets the BLEU Score in MT Hub
        /// for the given model.</param>
        /// <param name="hubCategory">Gets the Category of this Model in
        /// Hub</param>
        /// <param name="errorCode">Gets the ErrorCode for failed trainings.
        /// Possible values include: 'noError', 'unkown',
        /// 'selectTestSets'</param>
        public TextTranslatorModelsTextTranslatorModelInfo(long id, string name, System.Guid projectId, System.DateTime modifiedDate, System.DateTime createdDate, TextTranslatorModelsResponseUserInfo createdBy, TextTranslatorModelsResponseUserInfo modifiedBy, string modelStatus, bool isTuningAuto, bool isTestingAuto, bool isAutoDeploy, double autoDeployThreshold, string modelIdentifier = default(string), IList<TextTranslatorModelsTextTranslatorDocumentInstance> documents = default(IList<TextTranslatorModelsTextTranslatorDocumentInstance>), IList<TextTranslatorModelsTextTranslatorModelRegionStatus> modelRegionStatuses = default(IList<TextTranslatorModelsTextTranslatorModelRegionStatus>), double? baselineBleuScorePunctuated = default(double?), double? bleuScorePunctuated = default(double?), double? baselineBleuScoreUnpunctuated = default(double?), double? bleuScoreUnpunctuated = default(double?), double? baselineBleuScoreCIPunctuated = default(double?), double? bleuScoreCIPunctuated = default(double?), double? baselineBleuScoreCIUnpunctuated = default(double?), double? bleuScoreCIUnpunctuated = default(double?), System.DateTime? startDate = default(System.DateTime?), System.DateTime? completionDate = default(System.DateTime?), int? trainingSentenceCount = default(int?), int? tuningSentenceCount = default(int?), int? testingSentenceCount = default(int?), int? phraseDictionarySentenceCount = default(int?), int? sentenceDictionarySentenceCount = default(int?), int? monolingualSentenceCount = default(int?), string statusInfo = default(string), double? hubBLEUScore = default(double?), string hubCategory = default(string), string errorCode = default(string))
        {
            Id = id;
            Name = name;
            ModelIdentifier = modelIdentifier;
            ProjectId = projectId;
            Documents = documents;
            ModelRegionStatuses = modelRegionStatuses;
            BaselineBleuScorePunctuated = baselineBleuScorePunctuated;
            BleuScorePunctuated = bleuScorePunctuated;
            BaselineBleuScoreUnpunctuated = baselineBleuScoreUnpunctuated;
            BleuScoreUnpunctuated = bleuScoreUnpunctuated;
            BaselineBleuScoreCIPunctuated = baselineBleuScoreCIPunctuated;
            BleuScoreCIPunctuated = bleuScoreCIPunctuated;
            BaselineBleuScoreCIUnpunctuated = baselineBleuScoreCIUnpunctuated;
            BleuScoreCIUnpunctuated = bleuScoreCIUnpunctuated;
            StartDate = startDate;
            CompletionDate = completionDate;
            ModifiedDate = modifiedDate;
            CreatedDate = createdDate;
            CreatedBy = createdBy;
            ModifiedBy = modifiedBy;
            TrainingSentenceCount = trainingSentenceCount;
            TuningSentenceCount = tuningSentenceCount;
            TestingSentenceCount = testingSentenceCount;
            PhraseDictionarySentenceCount = phraseDictionarySentenceCount;
            SentenceDictionarySentenceCount = sentenceDictionarySentenceCount;
            MonolingualSentenceCount = monolingualSentenceCount;
            ModelStatus = modelStatus;
            StatusInfo = statusInfo;
            IsTuningAuto = isTuningAuto;
            IsTestingAuto = isTestingAuto;
            IsAutoDeploy = isAutoDeploy;
            AutoDeployThreshold = autoDeployThreshold;
            HubBLEUScore = hubBLEUScore;
            HubCategory = hubCategory;
            ErrorCode = errorCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets the model Id.
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long Id { get; set; }

        /// <summary>
        /// Gets or sets the name of the model.
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets the Identifier with which this sytem can be used for
        /// translations through our translate API. This field is autogenerated
        /// by the
        /// system when the model is deployed.
        /// </summary>
        [JsonProperty(PropertyName = "modelIdentifier")]
        public string ModelIdentifier { get; set; }

        /// <summary>
        /// Gets or sets the Id of the project to which the model belongs.
        /// </summary>
        [JsonProperty(PropertyName = "projectId")]
        public System.Guid ProjectId { get; set; }

        /// <summary>
        /// Gets or sets the list of documents used for training this model
        /// </summary>
        [JsonProperty(PropertyName = "documents")]
        public IList<TextTranslatorModelsTextTranslatorDocumentInstance> Documents { get; set; }

        /// <summary>
        /// Gets or sets the Regions this model is deployed in
        /// </summary>
        [JsonProperty(PropertyName = "modelRegionStatuses")]
        public IList<TextTranslatorModelsTextTranslatorModelRegionStatus> ModelRegionStatuses { get; set; }

        /// <summary>
        /// Gets or sets baseline BleuScore (case-sensitive, punctuated).
        /// </summary>
        [JsonProperty(PropertyName = "baselineBleuScorePunctuated")]
        public double? BaselineBleuScorePunctuated { get; set; }

        /// <summary>
        /// Gets or sets BleuScore (case-sensitive, punctuated).
        /// </summary>
        [JsonProperty(PropertyName = "bleuScorePunctuated")]
        public double? BleuScorePunctuated { get; set; }

        /// <summary>
        /// Gets or sets baseline BleuScore (case-sensitive, Unpunctuated).
        /// </summary>
        [JsonProperty(PropertyName = "baselineBleuScoreUnpunctuated")]
        public double? BaselineBleuScoreUnpunctuated { get; set; }

        /// <summary>
        /// Gets or sets BleuScore (case-sensitive, Unpunctuated).
        /// </summary>
        [JsonProperty(PropertyName = "bleuScoreUnpunctuated")]
        public double? BleuScoreUnpunctuated { get; set; }

        /// <summary>
        /// Gets or sets baseline BleuScore (case-insensitive, punctuated).
        /// </summary>
        [JsonProperty(PropertyName = "baselineBleuScoreCIPunctuated")]
        public double? BaselineBleuScoreCIPunctuated { get; set; }

        /// <summary>
        /// Gets or sets BleuScore (case-insensitive, punctuated).
        /// </summary>
        [JsonProperty(PropertyName = "bleuScoreCIPunctuated")]
        public double? BleuScoreCIPunctuated { get; set; }

        /// <summary>
        /// Gets or sets baseline BleuScore (case-insensitive, Unpunctuated).
        /// </summary>
        [JsonProperty(PropertyName = "baselineBleuScoreCIUnpunctuated")]
        public double? BaselineBleuScoreCIUnpunctuated { get; set; }

        /// <summary>
        /// Gets or sets BleuScore (case-insensitive, Unpunctuated).
        /// </summary>
        [JsonProperty(PropertyName = "bleuScoreCIUnpunctuated")]
        public double? BleuScoreCIUnpunctuated { get; set; }

        /// <summary>
        /// Gets or sets StartDate
        /// </summary>
        [JsonProperty(PropertyName = "startDate")]
        public System.DateTime? StartDate { get; set; }

        /// <summary>
        /// Gets or sets CompletionDate
        /// </summary>
        [JsonProperty(PropertyName = "completionDate")]
        public System.DateTime? CompletionDate { get; set; }

        /// <summary>
        /// Gets or sets ModifiedDate
        /// </summary>
        [JsonProperty(PropertyName = "modifiedDate")]
        public System.DateTime ModifiedDate { get; set; }

        /// <summary>
        /// Gets or sets CreatedDate
        /// </summary>
        [JsonProperty(PropertyName = "createdDate")]
        public System.DateTime CreatedDate { get; set; }

        /// <summary>
        /// Gets the user of the creator of this model.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public TextTranslatorModelsResponseUserInfo CreatedBy { get; set; }

        /// <summary>
        /// Gets the user of who last modified this model.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedBy")]
        public TextTranslatorModelsResponseUserInfo ModifiedBy { get; set; }

        /// <summary>
        /// Gets or sets TrainingSentenceCount
        /// </summary>
        [JsonProperty(PropertyName = "trainingSentenceCount")]
        public int? TrainingSentenceCount { get; set; }

        /// <summary>
        /// Gets or sets TuningSentenceCount
        /// </summary>
        [JsonProperty(PropertyName = "tuningSentenceCount")]
        public int? TuningSentenceCount { get; set; }

        /// <summary>
        /// Gets or sets TestingSentenceCount
        /// </summary>
        [JsonProperty(PropertyName = "testingSentenceCount")]
        public int? TestingSentenceCount { get; set; }

        /// <summary>
        /// Gets or sets DictionarySentenceCount
        /// </summary>
        [JsonProperty(PropertyName = "phraseDictionarySentenceCount")]
        public int? PhraseDictionarySentenceCount { get; set; }

        /// <summary>
        /// Gets or sets DictionarySentenceCount
        /// </summary>
        [JsonProperty(PropertyName = "sentenceDictionarySentenceCount")]
        public int? SentenceDictionarySentenceCount { get; set; }

        /// <summary>
        /// Gets or sets MonolingualSentenceCount
        /// </summary>
        [JsonProperty(PropertyName = "monolingualSentenceCount")]
        public int? MonolingualSentenceCount { get; set; }

        /// <summary>
        /// Gets or sets the status of the model training. Possible values
        /// include: 'unknown', 'dataProcessing', 'submitted',
        /// 'trainingQueued', 'running', 'succeeded', 'trainingFailed',
        /// 'deploying', 'deployed', 'undeploying', 'undeployed',
        /// 'dataProcessingFailed', 'deploymentFailed', 'migratedDraft',
        /// 'updatingDeployment', 'draft', 'hubDeployed'
        /// </summary>
        [JsonProperty(PropertyName = "modelStatus")]
        public string ModelStatus { get; set; }

        /// <summary>
        /// Gets or sets StatusInfo
        /// </summary>
        [JsonProperty(PropertyName = "statusInfo")]
        public string StatusInfo { get; set; }

        /// <summary>
        /// Gets or sets IsTuningAuto
        /// </summary>
        [JsonProperty(PropertyName = "isTuningAuto")]
        public bool IsTuningAuto { get; set; }

        /// <summary>
        /// Gets or sets IsTestingAuto
        /// </summary>
        [JsonProperty(PropertyName = "isTestingAuto")]
        public bool IsTestingAuto { get; set; }

        /// <summary>
        /// Gets or sets IsAutoDeploy
        /// </summary>
        [JsonProperty(PropertyName = "isAutoDeploy")]
        public bool IsAutoDeploy { get; set; }

        /// <summary>
        /// Gets or sets the auto deployment bleu score diff threshold.
        /// Auto-deploy will occur when the
        /// bleu score threshold meets or exceeds the specified minimum.
        /// </summary>
        [JsonProperty(PropertyName = "autoDeployThreshold")]
        public double AutoDeployThreshold { get; set; }

        /// <summary>
        /// Gets or sets the BLEU Score in MT Hub for the given model.
        /// </summary>
        [JsonProperty(PropertyName = "hubBLEUScore")]
        public double? HubBLEUScore { get; set; }

        /// <summary>
        /// Gets the Category of this Model in Hub
        /// </summary>
        [JsonProperty(PropertyName = "hubCategory")]
        public string HubCategory { get; set; }

        /// <summary>
        /// Gets the ErrorCode for failed trainings. Possible values include:
        /// 'noError', 'unkown', 'selectTestSets'
        /// </summary>
        [JsonProperty(PropertyName = "errorCode")]
        public string ErrorCode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (CreatedBy == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CreatedBy");
            }
            if (ModifiedBy == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ModifiedBy");
            }
            if (ModelStatus == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ModelStatus");
            }
            if (Documents != null)
            {
                foreach (var element in Documents)
                {
                    if (element != null)
                    {
                        element.Validate();
                    }
                }
            }
            if (ModelRegionStatuses != null)
            {
                foreach (var element1 in ModelRegionStatuses)
                {
                    if (element1 != null)
                    {
                        element1.Validate();
                    }
                }
            }
            if (CreatedBy != null)
            {
                CreatedBy.Validate();
            }
            if (ModifiedBy != null)
            {
                ModifiedBy.Validate();
            }
        }
    }
}
