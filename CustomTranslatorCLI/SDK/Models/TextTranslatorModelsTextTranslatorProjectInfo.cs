// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace CustomTranslator.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    public partial class TextTranslatorModelsTextTranslatorProjectInfo
    {
        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsTextTranslatorProjectInfo class.
        /// </summary>
        public TextTranslatorModelsTextTranslatorProjectInfo()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsTextTranslatorProjectInfo class.
        /// </summary>
        /// <param name="id">Gets or sets Id</param>
        /// <param name="name">Gets or sets Name</param>
        /// <param name="languagePair">Gets or sets the language pair</param>
        /// <param name="category">Gets or sets Category</param>
        /// <param name="status">Gets or sets Status. Possible values include:
        /// 'unknown', 'dataProcessing', 'submitted', 'trainingQueued',
        /// 'running', 'succeeded', 'trainingFailed', 'deploying', 'deployed',
        /// 'undeploying', 'undeployed', 'dataProcessingFailed',
        /// 'deploymentFailed', 'migratedDraft', 'updatingDeployment', 'draft',
        /// 'hubDeployed'</param>
        /// <param name="modifiedDate">Gets or sets ModifiedDate</param>
        /// <param name="createdDate">Gets the CreatedDate</param>
        /// <param name="createdBy">Gets the creator of this project.</param>
        /// <param name="modifiedBy">Gets the user who last modified this
        /// project.</param>
        /// <param name="apiDomain">Gets the Api Domain</param>
        /// <param name="isAvailable">Maps to the IsAvailable of the unerlying
        /// Language pair.</param>
        /// <param name="label">Gets or sets the ProjectLabel</param>
        /// <param name="description">Gets or sets Description</param>
        /// <param name="categoryDescriptor">Gets or sets
        /// CategoryDescriptor</param>
        /// <param name="baselineBleuScorePunctuated">Gets or sets baseline
        /// BleuScore (case-sensitive, punctuated).</param>
        /// <param name="bleuScorePunctuated">Gets or sets BleuScore
        /// (case-sensitive, punctuated).</param>
        /// <param name="baselineBleuScoreUnpunctuated">Gets or sets baseline
        /// BleuScore (case-sensitive, Unpunctuated).</param>
        /// <param name="bleuScoreUnpunctuated">Gets or sets BleuScore
        /// (case-sensitive, Unpunctuated).</param>
        /// <param name="baselineBleuScoreCIPunctuated">Gets or sets baseline
        /// BleuScore (case-insensitive, punctuated).</param>
        /// <param name="bleuScoreCIPunctuated">Gets or sets BleuScore
        /// (case-insensitive, punctuated).</param>
        /// <param name="baselineBleuScoreCIUnpunctuated">Gets or sets baseline
        /// BleuScore (case-insensitive, Unpunctuated).</param>
        /// <param name="bleuScoreCIUnpunctuated">Gets or sets BleuScore
        /// (case-insensitive, Unpunctuated).</param>
        /// <param name="hubCategory">Gets the Category of this Model in
        /// Hub</param>
        public TextTranslatorModelsTextTranslatorProjectInfo(System.Guid id, string name, TextTranslatorModelsLanguagePair languagePair, TextTranslatorModelsTextTranslatorCategory category, string status, System.DateTime modifiedDate, System.DateTime createdDate, TextTranslatorModelsResponseUserInfo createdBy, TextTranslatorModelsResponseUserInfo modifiedBy, string apiDomain, bool isAvailable, string label = default(string), string description = default(string), string categoryDescriptor = default(string), double? baselineBleuScorePunctuated = default(double?), double? bleuScorePunctuated = default(double?), double? baselineBleuScoreUnpunctuated = default(double?), double? bleuScoreUnpunctuated = default(double?), double? baselineBleuScoreCIPunctuated = default(double?), double? bleuScoreCIPunctuated = default(double?), double? baselineBleuScoreCIUnpunctuated = default(double?), double? bleuScoreCIUnpunctuated = default(double?), string hubCategory = default(string))
        {
            Id = id;
            Name = name;
            Label = label;
            Description = description;
            LanguagePair = languagePair;
            Category = category;
            CategoryDescriptor = categoryDescriptor;
            BaselineBleuScorePunctuated = baselineBleuScorePunctuated;
            BleuScorePunctuated = bleuScorePunctuated;
            BaselineBleuScoreUnpunctuated = baselineBleuScoreUnpunctuated;
            BleuScoreUnpunctuated = bleuScoreUnpunctuated;
            BaselineBleuScoreCIPunctuated = baselineBleuScoreCIPunctuated;
            BleuScoreCIPunctuated = bleuScoreCIPunctuated;
            BaselineBleuScoreCIUnpunctuated = baselineBleuScoreCIUnpunctuated;
            BleuScoreCIUnpunctuated = bleuScoreCIUnpunctuated;
            Status = status;
            ModifiedDate = modifiedDate;
            CreatedDate = createdDate;
            CreatedBy = createdBy;
            ModifiedBy = modifiedBy;
            ApiDomain = apiDomain;
            IsAvailable = isAvailable;
            HubCategory = hubCategory;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets Id
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public System.Guid Id { get; set; }

        /// <summary>
        /// Gets or sets Name
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// Gets or sets the ProjectLabel
        /// </summary>
        [JsonProperty(PropertyName = "label")]
        public string Label { get; set; }

        /// <summary>
        /// Gets or sets Description
        /// </summary>
        [JsonProperty(PropertyName = "description")]
        public string Description { get; set; }

        /// <summary>
        /// Gets or sets the language pair
        /// </summary>
        [JsonProperty(PropertyName = "languagePair")]
        public TextTranslatorModelsLanguagePair LanguagePair { get; set; }

        /// <summary>
        /// Gets or sets Category
        /// </summary>
        [JsonProperty(PropertyName = "category")]
        public TextTranslatorModelsTextTranslatorCategory Category { get; set; }

        /// <summary>
        /// Gets or sets CategoryDescriptor
        /// </summary>
        [JsonProperty(PropertyName = "categoryDescriptor")]
        public string CategoryDescriptor { get; set; }

        /// <summary>
        /// Gets or sets baseline BleuScore (case-sensitive, punctuated).
        /// </summary>
        [JsonProperty(PropertyName = "baselineBleuScorePunctuated")]
        public double? BaselineBleuScorePunctuated { get; set; }

        /// <summary>
        /// Gets or sets BleuScore (case-sensitive, punctuated).
        /// </summary>
        [JsonProperty(PropertyName = "bleuScorePunctuated")]
        public double? BleuScorePunctuated { get; set; }

        /// <summary>
        /// Gets or sets baseline BleuScore (case-sensitive, Unpunctuated).
        /// </summary>
        [JsonProperty(PropertyName = "baselineBleuScoreUnpunctuated")]
        public double? BaselineBleuScoreUnpunctuated { get; set; }

        /// <summary>
        /// Gets or sets BleuScore (case-sensitive, Unpunctuated).
        /// </summary>
        [JsonProperty(PropertyName = "bleuScoreUnpunctuated")]
        public double? BleuScoreUnpunctuated { get; set; }

        /// <summary>
        /// Gets or sets baseline BleuScore (case-insensitive, punctuated).
        /// </summary>
        [JsonProperty(PropertyName = "baselineBleuScoreCIPunctuated")]
        public double? BaselineBleuScoreCIPunctuated { get; set; }

        /// <summary>
        /// Gets or sets BleuScore (case-insensitive, punctuated).
        /// </summary>
        [JsonProperty(PropertyName = "bleuScoreCIPunctuated")]
        public double? BleuScoreCIPunctuated { get; set; }

        /// <summary>
        /// Gets or sets baseline BleuScore (case-insensitive, Unpunctuated).
        /// </summary>
        [JsonProperty(PropertyName = "baselineBleuScoreCIUnpunctuated")]
        public double? BaselineBleuScoreCIUnpunctuated { get; set; }

        /// <summary>
        /// Gets or sets BleuScore (case-insensitive, Unpunctuated).
        /// </summary>
        [JsonProperty(PropertyName = "bleuScoreCIUnpunctuated")]
        public double? BleuScoreCIUnpunctuated { get; set; }

        /// <summary>
        /// Gets or sets Status. Possible values include: 'unknown',
        /// 'dataProcessing', 'submitted', 'trainingQueued', 'running',
        /// 'succeeded', 'trainingFailed', 'deploying', 'deployed',
        /// 'undeploying', 'undeployed', 'dataProcessingFailed',
        /// 'deploymentFailed', 'migratedDraft', 'updatingDeployment', 'draft',
        /// 'hubDeployed'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// Gets or sets ModifiedDate
        /// </summary>
        [JsonProperty(PropertyName = "modifiedDate")]
        public System.DateTime ModifiedDate { get; set; }

        /// <summary>
        /// Gets the CreatedDate
        /// </summary>
        [JsonProperty(PropertyName = "createdDate")]
        public System.DateTime CreatedDate { get; set; }

        /// <summary>
        /// Gets the creator of this project.
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public TextTranslatorModelsResponseUserInfo CreatedBy { get; set; }

        /// <summary>
        /// Gets the user who last modified this project.
        /// </summary>
        [JsonProperty(PropertyName = "modifiedBy")]
        public TextTranslatorModelsResponseUserInfo ModifiedBy { get; set; }

        /// <summary>
        /// Gets the Api Domain
        /// </summary>
        [JsonProperty(PropertyName = "apiDomain")]
        public string ApiDomain { get; set; }

        /// <summary>
        /// Gets or sets maps to the IsAvailable of the unerlying Language
        /// pair.
        /// </summary>
        [JsonProperty(PropertyName = "isAvailable")]
        public bool IsAvailable { get; set; }

        /// <summary>
        /// Gets the Category of this Model in Hub
        /// </summary>
        [JsonProperty(PropertyName = "hubCategory")]
        public string HubCategory { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (Name == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Name");
            }
            if (LanguagePair == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "LanguagePair");
            }
            if (Category == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Category");
            }
            if (Status == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "Status");
            }
            if (CreatedBy == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "CreatedBy");
            }
            if (ModifiedBy == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ModifiedBy");
            }
            if (ApiDomain == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "ApiDomain");
            }
            if (LanguagePair != null)
            {
                LanguagePair.Validate();
            }
            if (Category != null)
            {
                Category.Validate();
            }
            if (CreatedBy != null)
            {
                CreatedBy.Validate();
            }
            if (ModifiedBy != null)
            {
                ModifiedBy.Validate();
            }
        }
    }
}
