// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TextTranslatorDALDocument
    {
        /// <summary>
        /// Initializes a new instance of the TextTranslatorDALDocument class.
        /// </summary>
        public TextTranslatorDALDocument()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TextTranslatorDALDocument class.
        /// </summary>
        public TextTranslatorDALDocument(long? id = default(long?), int? applicationId = default(int?), string name = default(string), int? documentTypeId = default(int?), bool? isParallel = default(bool?), int? alignedSentenceCount = default(int?), System.Guid? createdBy = default(System.Guid?), System.Guid? modifiedBy = default(System.Guid?), System.DateTime? createdDate = default(System.DateTime?), bool? isAvailable = default(bool?), TextTranslatorDALApplication application = default(TextTranslatorDALApplication), TextTranslatorDALApplicationUser createdByNavigation = default(TextTranslatorDALApplicationUser), TextTranslatorDALDocumentType documentType = default(TextTranslatorDALDocumentType), TextTranslatorDALApplicationUser modifiedByNavigation = default(TextTranslatorDALApplicationUser), IList<TextTranslatorDALDocumentFiles> documentFiles = default(IList<TextTranslatorDALDocumentFiles>), IList<TextTranslatorDALModelDocuments> modelDocuments = default(IList<TextTranslatorDALModelDocuments>), IList<TextTranslatorDALProcessedDocument> processedDocument = default(IList<TextTranslatorDALProcessedDocument>))
        {
            Id = id;
            ApplicationId = applicationId;
            Name = name;
            DocumentTypeId = documentTypeId;
            IsParallel = isParallel;
            AlignedSentenceCount = alignedSentenceCount;
            CreatedBy = createdBy;
            ModifiedBy = modifiedBy;
            CreatedDate = createdDate;
            IsAvailable = isAvailable;
            Application = application;
            CreatedByNavigation = createdByNavigation;
            DocumentType = documentType;
            ModifiedByNavigation = modifiedByNavigation;
            DocumentFiles = documentFiles;
            ModelDocuments = modelDocuments;
            ProcessedDocument = processedDocument;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationId")]
        public int? ApplicationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentTypeId")]
        public int? DocumentTypeId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isParallel")]
        public bool? IsParallel { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "alignedSentenceCount")]
        public int? AlignedSentenceCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public System.Guid? CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedBy")]
        public System.Guid? ModifiedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdDate")]
        public System.DateTime? CreatedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isAvailable")]
        public bool? IsAvailable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "application")]
        public TextTranslatorDALApplication Application { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdByNavigation")]
        public TextTranslatorDALApplicationUser CreatedByNavigation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentType")]
        public TextTranslatorDALDocumentType DocumentType { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modifiedByNavigation")]
        public TextTranslatorDALApplicationUser ModifiedByNavigation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentFiles")]
        public IList<TextTranslatorDALDocumentFiles> DocumentFiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "modelDocuments")]
        public IList<TextTranslatorDALModelDocuments> ModelDocuments { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "processedDocument")]
        public IList<TextTranslatorDALProcessedDocument> ProcessedDocument { get; set; }

    }
}
