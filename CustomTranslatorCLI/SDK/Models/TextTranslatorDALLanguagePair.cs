// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace CustomTranslator.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TextTranslatorDALLanguagePair
    {
        /// <summary>
        /// Initializes a new instance of the TextTranslatorDALLanguagePair
        /// class.
        /// </summary>
        public TextTranslatorDALLanguagePair()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TextTranslatorDALLanguagePair
        /// class.
        /// </summary>
        public TextTranslatorDALLanguagePair(int? id = default(int?), int? sourceLanguageId = default(int?), int? targetLanguageId = default(int?), bool? isAvailable = default(bool?), TextTranslatorDALLanguage sourceLanguage = default(TextTranslatorDALLanguage), TextTranslatorDALLanguage targetLanguage = default(TextTranslatorDALLanguage), IList<TextTranslatorDALProject> project = default(IList<TextTranslatorDALProject>))
        {
            Id = id;
            SourceLanguageId = sourceLanguageId;
            TargetLanguageId = targetLanguageId;
            IsAvailable = isAvailable;
            SourceLanguage = sourceLanguage;
            TargetLanguage = targetLanguage;
            Project = project;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public int? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceLanguageId")]
        public int? SourceLanguageId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetLanguageId")]
        public int? TargetLanguageId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "isAvailable")]
        public bool? IsAvailable { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sourceLanguage")]
        public TextTranslatorDALLanguage SourceLanguage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "targetLanguage")]
        public TextTranslatorDALLanguage TargetLanguage { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "project")]
        public IList<TextTranslatorDALProject> Project { get; set; }

    }
}
