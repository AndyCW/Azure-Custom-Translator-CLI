// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace CustomTranslator.Models
{
    using Newtonsoft.Json;
    using System.Collections;
    using System.Collections.Generic;
    using System.Linq;

    public partial class TextTranslatorDALFile
    {
        /// <summary>
        /// Initializes a new instance of the TextTranslatorDALFile class.
        /// </summary>
        public TextTranslatorDALFile()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the TextTranslatorDALFile class.
        /// </summary>
        /// <param name="status">Possible values include: 'processing',
        /// 'processed'</param>
        public TextTranslatorDALFile(long? id = default(long?), long? parentId = default(long?), int? applicationId = default(int?), string name = default(string), string extension = default(string), string languageCode = default(string), string blobLocation = default(string), string sntBlobLocation = default(string), string status = default(string), long? sentenceCount = default(long?), long? characterCount = default(long?), long? fileSize = default(long?), System.Guid? createdBy = default(System.Guid?), System.DateTime? createdDate = default(System.DateTime?), int? uploadHistoryId = default(int?), TextTranslatorDALApplication application = default(TextTranslatorDALApplication), TextTranslatorDALApplicationUser createdByNavigation = default(TextTranslatorDALApplicationUser), IList<TextTranslatorDALDocumentFiles> documentFiles = default(IList<TextTranslatorDALDocumentFiles>), TextTranslatorDALUploadHistory uploadHistory = default(TextTranslatorDALUploadHistory), TextTranslatorDALLanguage language = default(TextTranslatorDALLanguage))
        {
            Id = id;
            ParentId = parentId;
            ApplicationId = applicationId;
            Name = name;
            Extension = extension;
            LanguageCode = languageCode;
            BlobLocation = blobLocation;
            SntBlobLocation = sntBlobLocation;
            Status = status;
            SentenceCount = sentenceCount;
            CharacterCount = characterCount;
            FileSize = fileSize;
            CreatedBy = createdBy;
            CreatedDate = createdDate;
            UploadHistoryId = uploadHistoryId;
            Application = application;
            CreatedByNavigation = createdByNavigation;
            DocumentFiles = documentFiles;
            UploadHistory = uploadHistory;
            Language = language;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "id")]
        public long? Id { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "parentId")]
        public long? ParentId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "applicationId")]
        public int? ApplicationId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "name")]
        public string Name { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "extension")]
        public string Extension { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "languageCode")]
        public string LanguageCode { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "blobLocation")]
        public string BlobLocation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sntBlobLocation")]
        public string SntBlobLocation { get; set; }

        /// <summary>
        /// Gets or sets possible values include: 'processing', 'processed'
        /// </summary>
        [JsonProperty(PropertyName = "status")]
        public string Status { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "sentenceCount")]
        public long? SentenceCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "characterCount")]
        public long? CharacterCount { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "fileSize")]
        public long? FileSize { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdBy")]
        public System.Guid? CreatedBy { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdDate")]
        public System.DateTime? CreatedDate { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uploadHistoryId")]
        public int? UploadHistoryId { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "application")]
        public TextTranslatorDALApplication Application { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "createdByNavigation")]
        public TextTranslatorDALApplicationUser CreatedByNavigation { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "documentFiles")]
        public IList<TextTranslatorDALDocumentFiles> DocumentFiles { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "uploadHistory")]
        public TextTranslatorDALUploadHistory UploadHistory { get; set; }

        /// <summary>
        /// </summary>
        [JsonProperty(PropertyName = "language")]
        public TextTranslatorDALLanguage Language { get; set; }

    }
}
