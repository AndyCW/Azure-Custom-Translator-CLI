// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger.Models
{
    using Microsoft.Rest;
    using Newtonsoft.Json;
    using System.Linq;

    /// <summary>
    /// The input class for subscription requests.
    /// </summary>
    public partial class TextTranslatorModelsRequestTextTranslatorSubscriptionRequest
    {
        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsRequestTextTranslatorSubscriptionRequest class.
        /// </summary>
        public TextTranslatorModelsRequestTextTranslatorSubscriptionRequest()
        {
            CustomInit();
        }

        /// <summary>
        /// Initializes a new instance of the
        /// TextTranslatorModelsRequestTextTranslatorSubscriptionRequest class.
        /// </summary>
        /// <param name="subscriptionKey">Gets or sets Name</param>
        /// <param name="billingRegionCode">Gets or sets the region</param>
        public TextTranslatorModelsRequestTextTranslatorSubscriptionRequest(string subscriptionKey, string billingRegionCode)
        {
            SubscriptionKey = subscriptionKey;
            BillingRegionCode = billingRegionCode;
            CustomInit();
        }

        /// <summary>
        /// An initialization method that performs custom operations like setting defaults
        /// </summary>
        partial void CustomInit();

        /// <summary>
        /// Gets or sets Name
        /// </summary>
        [JsonProperty(PropertyName = "subscriptionKey")]
        public string SubscriptionKey { get; set; }

        /// <summary>
        /// Gets or sets the region
        /// </summary>
        [JsonProperty(PropertyName = "billingRegionCode")]
        public string BillingRegionCode { get; set; }

        /// <summary>
        /// Validate the object.
        /// </summary>
        /// <exception cref="ValidationException">
        /// Thrown if validation fails
        /// </exception>
        public virtual void Validate()
        {
            if (SubscriptionKey == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "SubscriptionKey");
            }
            if (BillingRegionCode == null)
            {
                throw new ValidationException(ValidationRules.CannotBeNull, "BillingRegionCode");
            }
        }
    }
}
