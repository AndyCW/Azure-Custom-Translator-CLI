// <auto-generated>
// Code generated by Microsoft (R) AutoRest Code Generator.
// Changes may cause incorrect behavior and will be lost if the code is
// regenerated.
// </auto-generated>

namespace Swagger
{
    using Models;
    using System.Collections;
    using System.Collections.Generic;
    using System.Threading;
    using System.Threading.Tasks;

    /// <summary>
    /// Extension methods for MicrosoftCustomTranslatorAPIPreview10.
    /// </summary>
    public static partial class MicrosoftCustomTranslatorAPIPreview10Extensions
    {
            /// <summary>
            /// Gets the list of categories that can be assigned to the project.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            public static IList<TextTranslatorModelsTextTranslatorCategory> ApiTexttranslatorV10CategoriesGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization)
            {
                return operations.ApiTexttranslatorV10CategoriesGetAsync(authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of categories that can be assigned to the project.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TextTranslatorModelsTextTranslatorCategory>> ApiTexttranslatorV10CategoriesGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10CategoriesGetWithHttpMessagesAsync(authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the documents.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Documents can be filtered using standard OData $filter syntax. Supported
            /// fields and operations:
            /// - Name - document name to filter by. Supported operations are 'eq' and
            /// 'substringof'.
            /// - DocumentType - Document type filter. Supported operations are 'eq'.
            /// - LanguageCode - Language code filter. Supported operations are 'eq' .
            /// - IsParallel - Filter by the IsParallel boolean flag. Supported operations
            /// are 'eq'.
            /// - ProjectLanguages - Filter for documents applicable to a project with the
            /// specified language pair.  Language pair should be specified with a
            /// '-&amp;gt;' between the languages. Supported operations are 'eq'.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters.
            /// Also no nested conditions are supported.
            /// &lt;br /&gt;
            /// Example: /api/texttranslator/v1/documents?$filter=substringof(Name,
            /// 'Document 1') and documentType eq 'training' and languageCode eq 'de' and
            /// isParallel eq false
            /// &lt;br /&gt;
            /// Example with ProjectLanguages -
            /// /api/texttranslator/v1/documents?$filter=projectLanguage eq 'en-&amp;gt;de'
            /// &lt;br /&gt;&lt;br /&gt;
            /// To sort the returned results please use the standard OData $orderby syntax.
            /// Supported fields are:
            /// - name- document name to order by.
            /// - createdDate- document created date to order by.
            /// - documentType- document type to order by - Training,Testing,Tuning, Phrase
            /// Dictionary and Sentence Dictionary in ascending or descending.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only one orderBy field can be used at a time, else a 404  will be returned.
            /// &lt;br /&gt;
            /// Example with Name : /api/texttranslator/v1/documents?$orderby=name desc
            /// &lt;br /&gt;
            /// Example with CreatedDate:
            /// /api/texttranslator/v1/documents?$orderby=createdDate asc
            /// &lt;br /&gt;
            /// Example with DocumentType:
            /// /api/texttranslator/v1/documents?$orderby=documentType desc
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='pageIndex'>
            /// Index of the page.
            /// </param>
            /// <param name='workspaceId'>
            /// Id of the workspace
            /// </param>
            /// <param name='includeAllDocumentsFields'>
            /// Whether or not to return the optional field 'AllDocuments'
            /// that includes basic information about documents outside the pagination
            /// range.
            /// </param>
            /// <param name='prioritizeModel'>
            /// When paginating results, ensures that documents that are part of this model
            /// are listed before all other documents. If both prioritizeModel and orderby
            /// are provided, prioritzeModel will
            /// be ignored.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter.
            /// </param>
            /// <param name='orderby'>
            /// The OData $orderby parameter.
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorDocumentsResponse ApiTexttranslatorV10DocumentsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, int pageIndex, string workspaceId, bool? includeAllDocumentsFields = default(bool?), long? prioritizeModel = default(long?), string filter = default(string), string orderby = default(string))
            {
                return operations.ApiTexttranslatorV10DocumentsGetAsync(authorization, pageIndex, workspaceId, includeAllDocumentsFields, prioritizeModel, filter, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the documents.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Documents can be filtered using standard OData $filter syntax. Supported
            /// fields and operations:
            /// - Name - document name to filter by. Supported operations are 'eq' and
            /// 'substringof'.
            /// - DocumentType - Document type filter. Supported operations are 'eq'.
            /// - LanguageCode - Language code filter. Supported operations are 'eq' .
            /// - IsParallel - Filter by the IsParallel boolean flag. Supported operations
            /// are 'eq'.
            /// - ProjectLanguages - Filter for documents applicable to a project with the
            /// specified language pair.  Language pair should be specified with a
            /// '-&amp;gt;' between the languages. Supported operations are 'eq'.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters.
            /// Also no nested conditions are supported.
            /// &lt;br /&gt;
            /// Example: /api/texttranslator/v1/documents?$filter=substringof(Name,
            /// 'Document 1') and documentType eq 'training' and languageCode eq 'de' and
            /// isParallel eq false
            /// &lt;br /&gt;
            /// Example with ProjectLanguages -
            /// /api/texttranslator/v1/documents?$filter=projectLanguage eq 'en-&amp;gt;de'
            /// &lt;br /&gt;&lt;br /&gt;
            /// To sort the returned results please use the standard OData $orderby syntax.
            /// Supported fields are:
            /// - name- document name to order by.
            /// - createdDate- document created date to order by.
            /// - documentType- document type to order by - Training,Testing,Tuning, Phrase
            /// Dictionary and Sentence Dictionary in ascending or descending.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only one orderBy field can be used at a time, else a 404  will be returned.
            /// &lt;br /&gt;
            /// Example with Name : /api/texttranslator/v1/documents?$orderby=name desc
            /// &lt;br /&gt;
            /// Example with CreatedDate:
            /// /api/texttranslator/v1/documents?$orderby=createdDate asc
            /// &lt;br /&gt;
            /// Example with DocumentType:
            /// /api/texttranslator/v1/documents?$orderby=documentType desc
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='pageIndex'>
            /// Index of the page.
            /// </param>
            /// <param name='workspaceId'>
            /// Id of the workspace
            /// </param>
            /// <param name='includeAllDocumentsFields'>
            /// Whether or not to return the optional field 'AllDocuments'
            /// that includes basic information about documents outside the pagination
            /// range.
            /// </param>
            /// <param name='prioritizeModel'>
            /// When paginating results, ensures that documents that are part of this model
            /// are listed before all other documents. If both prioritizeModel and orderby
            /// are provided, prioritzeModel will
            /// be ignored.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter.
            /// </param>
            /// <param name='orderby'>
            /// The OData $orderby parameter.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorDocumentsResponse> ApiTexttranslatorV10DocumentsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, int pageIndex, string workspaceId, bool? includeAllDocumentsFields = default(bool?), long? prioritizeModel = default(long?), string filter = default(string), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10DocumentsGetWithHttpMessagesAsync(authorization, pageIndex, workspaceId, includeAllDocumentsFields, prioritizeModel, filter, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the requested document
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the document for which details are requested
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static TextTranslatorModelsTextTranslatorDocumentInfo ApiTexttranslatorV10DocumentsByIdGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                return operations.ApiTexttranslatorV10DocumentsByIdGetAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the requested document
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the document for which details are requested
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsTextTranslatorDocumentInfo> ApiTexttranslatorV10DocumentsByIdGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10DocumentsByIdGetWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete the document
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id of the document to be deleted
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static void ApiTexttranslatorV10DocumentsByIdDelete(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                operations.ApiTexttranslatorV10DocumentsByIdDeleteAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete the document
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id of the document to be deleted
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10DocumentsByIdDeleteAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10DocumentsByIdDeleteWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the files for the document
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the document for which the files information is requested
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static IList<TextTranslatorModelsTextTranslatorFileInfo> ApiTexttranslatorV10DocumentsByIdFilesGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                return operations.ApiTexttranslatorV10DocumentsByIdFilesGetAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the files for the document
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the document for which the files information is requested
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TextTranslatorModelsTextTranslatorFileInfo>> ApiTexttranslatorV10DocumentsByIdFilesGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10DocumentsByIdFilesGetWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the content of the requested file
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The document identifier.
            /// </param>
            /// <param name='language'>
            /// The language.
            /// </param>
            /// <param name='authorization'>
            /// The access token
            /// </param>
            /// <param name='pageIndex'>
            /// Index of the page.
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorFileContentResponse ApiTexttranslatorV10DocumentsByIdFilesByLanguageContentsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string language, string authorization, int pageIndex)
            {
                return operations.ApiTexttranslatorV10DocumentsByIdFilesByLanguageContentsGetAsync(id, language, authorization, pageIndex).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the content of the requested file
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The document identifier.
            /// </param>
            /// <param name='language'>
            /// The language.
            /// </param>
            /// <param name='authorization'>
            /// The access token
            /// </param>
            /// <param name='pageIndex'>
            /// Index of the page.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorFileContentResponse> ApiTexttranslatorV10DocumentsByIdFilesByLanguageContentsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string language, string authorization, int pageIndex, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10DocumentsByIdFilesByLanguageContentsGetWithHttpMessagesAsync(id, language, authorization, pageIndex, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Downloads a zip containing the file(s) belonging to this document
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the document for which files are requested
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static MicrosoftAspNetCoreMvcVirtualFileResult ApiTexttranslatorV10DocumentsByIdExportGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                return operations.ApiTexttranslatorV10DocumentsByIdExportGetAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Downloads a zip containing the file(s) belonging to this document
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the document for which files are requested
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftAspNetCoreMvcVirtualFileResult> ApiTexttranslatorV10DocumentsByIdExportGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10DocumentsByIdExportGetWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Upload files for processing. Documents are created asynchronously. Upload
            /// status can be checked using the returned job id
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='files'>
            /// Gets or sets the uploaded Files
            /// </param>
            /// <param name='documentDetails'>
            /// Gets or sets the document details with their files that are being uploaded.
            /// multipart/form-data type does not serialize/de-serialize to anything other
            /// than file or string
            /// This will be parsed in the controller to type
            /// IEnumerable[ImportDocumentRequestDetails]
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace id
            /// </param>
            public static TextTranslatorApiModelsResponseTestTranslatorImportFilesResponse ApiTexttranslatorV10DocumentsImportPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, string files, string documentDetails, string workspaceId)
            {
                return operations.ApiTexttranslatorV10DocumentsImportPostAsync(authorization, files, documentDetails, workspaceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Upload files for processing. Documents are created asynchronously. Upload
            /// status can be checked using the returned job id
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='files'>
            /// Gets or sets the uploaded Files
            /// </param>
            /// <param name='documentDetails'>
            /// Gets or sets the document details with their files that are being uploaded.
            /// multipart/form-data type does not serialize/de-serialize to anything other
            /// than file or string
            /// This will be parsed in the controller to type
            /// IEnumerable[ImportDocumentRequestDetails]
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorApiModelsResponseTestTranslatorImportFilesResponse> ApiTexttranslatorV10DocumentsImportPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, string files, string documentDetails, string workspaceId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10DocumentsImportPostWithHttpMessagesAsync(authorization, files, documentDetails, workspaceId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the status of the document import
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Document import status can be filtered using standard OData $filter syntax.
            /// Supported fields and operations:
            /// - FileName - Filters by document name. Supported operations are 'eq' and
            /// 'substringof'.
            /// - LanguageCode - Filters by language code. Supported operation is 'eq'.
            /// - Status - Filters by the import status. Supported operation is 'eq', 'lt'
            /// (less than), 'gt' (greater than).
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters, and
            /// nested conditions are not supported.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Example:
            /// /api/texttranslator/v1/documents/import/jobs/{jobId}?$filter=substringof(FileName,
            /// 'Document 1') and languageCode eq 'de' and status lt '254'
            /// &lt;br /&gt;
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='jobId'>
            /// The job identifier
            /// </param>
            /// <param name='pageIndex'>
            /// Index of the page. If not provided, defaults to returning the first page.
            /// </param>
            /// <param name='limit'>
            /// Limits the number of items per page. If not provided, defaults to 10.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorImportJobStatusResponse ApiTexttranslatorV10DocumentsImportJobsByJobIdGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, System.Guid jobId, int pageIndex, int limit, string filter = default(string))
            {
                return operations.ApiTexttranslatorV10DocumentsImportJobsByJobIdGetAsync(authorization, jobId, pageIndex, limit, filter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the status of the document import
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Document import status can be filtered using standard OData $filter syntax.
            /// Supported fields and operations:
            /// - FileName - Filters by document name. Supported operations are 'eq' and
            /// 'substringof'.
            /// - LanguageCode - Filters by language code. Supported operation is 'eq'.
            /// - Status - Filters by the import status. Supported operation is 'eq', 'lt'
            /// (less than), 'gt' (greater than).
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters, and
            /// nested conditions are not supported.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Example:
            /// /api/texttranslator/v1/documents/import/jobs/{jobId}?$filter=substringof(FileName,
            /// 'Document 1') and languageCode eq 'de' and status lt '254'
            /// &lt;br /&gt;
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='jobId'>
            /// The job identifier
            /// </param>
            /// <param name='pageIndex'>
            /// Index of the page. If not provided, defaults to returning the first page.
            /// </param>
            /// <param name='limit'>
            /// Limits the number of items per page. If not provided, defaults to 10.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorImportJobStatusResponse> ApiTexttranslatorV10DocumentsImportJobsByJobIdGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, System.Guid jobId, int pageIndex, int limit, string filter = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10DocumentsImportJobsByJobIdGetWithHttpMessagesAsync(authorization, jobId, pageIndex, limit, filter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the status of all past document imports
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Document import status can be filtered using standard OData $filter syntax.
            /// Supported fields and operations:
            /// - Name - Filters by document name. Supported operations are 'eq' and
            /// 'substringof'.
            /// - LanguageCode - Filters by language code. Supported operation is 'eq'.
            /// - Status - Filters by the import status. Supported operations are 'eq',
            /// 'lt' (less than), 'gt' (greater than).
            /// - UploadDateStart - Supported operation is 'ge' (greater than or equal to)
            /// - UploadDateEnd - Supported operation is 'le' (less than or equal to)
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters, and
            /// nested conditions are not supported.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Example:
            /// /api/texttranslator/v1/documents/import/jobs/all?$filter=substringof(Name,
            /// 'Document 1') and languagePair eq 'de,en' and status lt '254'
            /// &lt;br /&gt;
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Id for the workspace to fetch the jobs from.
            /// </param>
            /// <param name='pageIndex'>
            /// Index of the page. If not provided, defaults to returning the first page.
            /// </param>
            /// <param name='limit'>
            /// Limits the number of items per page. If not provided, defaults to 10.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorImportAllJobsStatusResponse ApiTexttranslatorV10DocumentsImportJobsAllGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, string workspaceId, int pageIndex, int limit, string filter = default(string))
            {
                return operations.ApiTexttranslatorV10DocumentsImportJobsAllGetAsync(authorization, workspaceId, pageIndex, limit, filter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the status of all past document imports
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Document import status can be filtered using standard OData $filter syntax.
            /// Supported fields and operations:
            /// - Name - Filters by document name. Supported operations are 'eq' and
            /// 'substringof'.
            /// - LanguageCode - Filters by language code. Supported operation is 'eq'.
            /// - Status - Filters by the import status. Supported operations are 'eq',
            /// 'lt' (less than), 'gt' (greater than).
            /// - UploadDateStart - Supported operation is 'ge' (greater than or equal to)
            /// - UploadDateEnd - Supported operation is 'le' (less than or equal to)
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters, and
            /// nested conditions are not supported.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Example:
            /// /api/texttranslator/v1/documents/import/jobs/all?$filter=substringof(Name,
            /// 'Document 1') and languagePair eq 'de,en' and status lt '254'
            /// &lt;br /&gt;
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Id for the workspace to fetch the jobs from.
            /// </param>
            /// <param name='pageIndex'>
            /// Index of the page. If not provided, defaults to returning the first page.
            /// </param>
            /// <param name='limit'>
            /// Limits the number of items per page. If not provided, defaults to 10.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorImportAllJobsStatusResponse> ApiTexttranslatorV10DocumentsImportJobsAllGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, string workspaceId, int pageIndex, int limit, string filter = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10DocumentsImportJobsAllGetWithHttpMessagesAsync(authorization, workspaceId, pageIndex, limit, filter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Downloads a zip containing Documents file(s) selected from project or all
            /// documents for model
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='documentIds'>
            /// The Ids of the document for which files are requested
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static MicrosoftAspNetCoreMvcVirtualFileResult ApiTexttranslatorV10DocumentsDownloadGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, IList<long?> documentIds, string authorization)
            {
                return operations.ApiTexttranslatorV10DocumentsDownloadGetAsync(documentIds, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Downloads a zip containing Documents file(s) selected from project or all
            /// documents for model
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='documentIds'>
            /// The Ids of the document for which files are requested
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftAspNetCoreMvcVirtualFileResult> ApiTexttranslatorV10DocumentsDownloadGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, IList<long?> documentIds, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10DocumentsDownloadGetWithHttpMessagesAsync(documentIds, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the list of languages supported by Translator Studio
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// The auth token for the system
            /// </param>
            public static IList<TextTranslatorModelsTextTranslatorLanguage> ApiTexttranslatorV10LanguagesGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization)
            {
                return operations.ApiTexttranslatorV10LanguagesGetAsync(authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of languages supported by Translator Studio
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// The auth token for the system
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TextTranslatorModelsTextTranslatorLanguage>> ApiTexttranslatorV10LanguagesGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10LanguagesGetWithHttpMessagesAsync(authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the list of language pairs are supported by the text translator for
            /// transalation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// The auth token for the system
            /// </param>
            public static IList<TextTranslatorModelsLanguagePair> ApiTexttranslatorV10LanguagesSupportedlanguagepairsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization)
            {
                return operations.ApiTexttranslatorV10LanguagesSupportedlanguagepairsGetAsync(authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of language pairs are supported by the text translator for
            /// transalation.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// The auth token for the system
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TextTranslatorModelsLanguagePair>> ApiTexttranslatorV10LanguagesSupportedlanguagepairsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10LanguagesSupportedlanguagepairsGetWithHttpMessagesAsync(authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Get the model details.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// To sort the returned results please use the standard OData $orderby syntax.
            /// Supported fields are:
            /// - sourceSentences - Orders documents returned by number of source
            /// sentences.
            /// - targetSentences - Orders documents returned by number of target
            /// sentences.
            /// - alignedSentences - Orders documents returned by number of aligned
            /// sentences.
            /// - usedSentences - Orders documents returned by number of used sentences.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only one orderBy field can be used at a time, else a 404  will be returned.
            /// &lt;br /&gt;
            /// Example with SourceSentences :
            /// /api/texttranslator/v1/documents?$orderby=sourceSentences desc
            /// &lt;br /&gt;
            /// Example with TargetSentences :
            /// /api/texttranslator/v1/documents?$orderby=targetSentences asc
            /// &lt;br /&gt;
            /// Example with AlignedSentences:
            /// /api/texttranslator/v1/documents?$orderby=alignedSentences desc
            /// &lt;br /&gt;
            /// Example with UsedSentences:
            /// /api/texttranslator/v1/documents?$orderby=usedSentences asc
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the requested model.
            /// </param>
            /// <param name='authorization'>
            /// Access token.
            /// </param>
            /// <param name='orderby'>
            /// The OData $orderby parameter.
            /// </param>
            public static TextTranslatorModelsTextTranslatorModelInfo ApiTexttranslatorV10ModelsByIdGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, string orderby = default(string))
            {
                return operations.ApiTexttranslatorV10ModelsByIdGetAsync(id, authorization, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the model details.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// To sort the returned results please use the standard OData $orderby syntax.
            /// Supported fields are:
            /// - sourceSentences - Orders documents returned by number of source
            /// sentences.
            /// - targetSentences - Orders documents returned by number of target
            /// sentences.
            /// - alignedSentences - Orders documents returned by number of aligned
            /// sentences.
            /// - usedSentences - Orders documents returned by number of used sentences.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only one orderBy field can be used at a time, else a 404  will be returned.
            /// &lt;br /&gt;
            /// Example with SourceSentences :
            /// /api/texttranslator/v1/documents?$orderby=sourceSentences desc
            /// &lt;br /&gt;
            /// Example with TargetSentences :
            /// /api/texttranslator/v1/documents?$orderby=targetSentences asc
            /// &lt;br /&gt;
            /// Example with AlignedSentences:
            /// /api/texttranslator/v1/documents?$orderby=alignedSentences desc
            /// &lt;br /&gt;
            /// Example with UsedSentences:
            /// /api/texttranslator/v1/documents?$orderby=usedSentences asc
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the requested model.
            /// </param>
            /// <param name='authorization'>
            /// Access token.
            /// </param>
            /// <param name='orderby'>
            /// The OData $orderby parameter.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsTextTranslatorModelInfo> ApiTexttranslatorV10ModelsByIdGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10ModelsByIdGetWithHttpMessagesAsync(id, authorization, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the model.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Documents can only be added or removed from the model if it is in a draft
            /// state.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id of the model to update.
            /// </param>
            /// <param name='model'>
            /// The updated model object.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorModelUpdateResponse ApiTexttranslatorV10ModelsByIdPut(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, TextTranslatorModelsRequestTextTranslatorModelUpdateRequest model, string authorization)
            {
                return operations.ApiTexttranslatorV10ModelsByIdPutAsync(id, model, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the model.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Documents can only be added or removed from the model if it is in a draft
            /// state.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id of the model to update.
            /// </param>
            /// <param name='model'>
            /// The updated model object.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorModelUpdateResponse> ApiTexttranslatorV10ModelsByIdPutAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, TextTranslatorModelsRequestTextTranslatorModelUpdateRequest model, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10ModelsByIdPutWithHttpMessagesAsync(id, model, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes the model.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the model to delete.
            /// </param>
            /// <param name='authorization'>
            /// Access token.
            /// </param>
            public static void ApiTexttranslatorV10ModelsByIdDelete(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                operations.ApiTexttranslatorV10ModelsByIdDeleteAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes the model.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the model to delete.
            /// </param>
            /// <param name='authorization'>
            /// Access token.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10ModelsByIdDeleteAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10ModelsByIdDeleteWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Creates a new model.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// The field 'isAutoTrain' defaults to true if not set. If it is set to false,
            /// it
            /// creates the model in a draft state.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='modelRequest'>
            /// The model to be added.
            /// </param>
            /// <param name='authorization'>
            /// Access token.
            /// </param>
            public static void ApiTexttranslatorV10ModelsPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorModelRequest modelRequest, string authorization)
            {
                operations.ApiTexttranslatorV10ModelsPostAsync(modelRequest, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a new model.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// The field 'isAutoTrain' defaults to true if not set. If it is set to false,
            /// it
            /// creates the model in a draft state.
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='modelRequest'>
            /// The model to be added.
            /// </param>
            /// <param name='authorization'>
            /// Access token.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10ModelsPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorModelRequest modelRequest, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10ModelsPostWithHttpMessagesAsync(modelRequest, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Train a model.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the model to train.
            /// </param>
            /// <param name='authorization'>
            /// The authorization.
            /// </param>
            public static void ApiTexttranslatorV10ModelsByIdTrainPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                operations.ApiTexttranslatorV10ModelsByIdTrainPostAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Train a model.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the model to train.
            /// </param>
            /// <param name='authorization'>
            /// The authorization.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10ModelsByIdTrainPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10ModelsByIdTrainPostWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Deploy or undeploy a model.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id of the model to deploy or undeploy.
            /// </param>
            /// <param name='authorization'>
            /// The authorization.
            /// </param>
            /// <param name='requestedRegionalDeployments'>
            /// An array of regions to be deployed/undeployed
            /// </param>
            public static void ApiTexttranslatorV10ModelsByIdDeploymentPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, IList<TextTranslatorModelsTextTranslatorModelRegionStatus> requestedRegionalDeployments)
            {
                operations.ApiTexttranslatorV10ModelsByIdDeploymentPostAsync(id, authorization, requestedRegionalDeployments).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deploy or undeploy a model.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id of the model to deploy or undeploy.
            /// </param>
            /// <param name='authorization'>
            /// The authorization.
            /// </param>
            /// <param name='requestedRegionalDeployments'>
            /// An array of regions to be deployed/undeployed
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10ModelsByIdDeploymentPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, IList<TextTranslatorModelsTextTranslatorModelRegionStatus> requestedRegionalDeployments, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10ModelsByIdDeploymentPostWithHttpMessagesAsync(id, authorization, requestedRegionalDeployments, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the list of tests for the model.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Tests can be filtered using standard OData $filter syntax. Supported fields
            /// and operations:
            /// - TestName - test name to filter by. Supported operations are 'eq' and
            /// 'substringof'.
            /// - Status - Supported operations are 'eq'.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters.
            /// Also no nested conditions are supported.
            /// &lt;br /&gt;
            /// Example:
            /// /api/texttranslator/v1/models/{id}/tests?$filter=substringof(testName,
            /// 'Test 1') and status eq 'Complete'
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the model to which tests belong.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='pageIndex'>
            /// The page index. Default is 1.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter.
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorTestsResponse ApiTexttranslatorV10ModelsByIdTestsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, int pageIndex, string filter = default(string))
            {
                return operations.ApiTexttranslatorV10ModelsByIdTestsGetAsync(id, authorization, pageIndex, filter).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of tests for the model.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Tests can be filtered using standard OData $filter syntax. Supported fields
            /// and operations:
            /// - TestName - test name to filter by. Supported operations are 'eq' and
            /// 'substringof'.
            /// - Status - Supported operations are 'eq'.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters.
            /// Also no nested conditions are supported.
            /// &lt;br /&gt;
            /// Example:
            /// /api/texttranslator/v1/models/{id}/tests?$filter=substringof(testName,
            /// 'Test 1') and status eq 'Complete'
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the model to which tests belong.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='pageIndex'>
            /// The page index. Default is 1.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorTestsResponse> ApiTexttranslatorV10ModelsByIdTestsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, int pageIndex, string filter = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10ModelsByIdTestsGetWithHttpMessagesAsync(id, authorization, pageIndex, filter, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Accepts a request to undeploy a Hub model deployed to API V3.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Id of the corresponding model in Custom Translator with status Hub
            /// Deployed.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static void ApiTexttranslatorV10ModelsByIdUndeployhubmodelDelete(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                operations.ApiTexttranslatorV10ModelsByIdUndeployhubmodelDeleteAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Accepts a request to undeploy a Hub model deployed to API V3.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Id of the corresponding model in Custom Translator with status Hub
            /// Deployed.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10ModelsByIdUndeployhubmodelDeleteAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10ModelsByIdUndeployhubmodelDeleteWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the list of projects.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Projects can be filtered using standard OData $filter syntax. Supported
            /// fields and operations:
            /// - Name- project name to filter by. Supported operations are 'eq' and
            /// 'substringof'.
            /// - SourceLanguage- Supported operations are 'eq'.
            /// - TargetLanguage- Supported operations are 'eq'.
            /// - Category- Supported operations are 'eq'.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters.
            /// Also no nested conditions are supported.
            /// &lt;br /&gt;
            /// Example: /api/texttranslator/v1/projects?$filter=substringof(name, 'Project
            /// 1') and status eq 'Deployed' and targetLanguage eq 'de'
            /// &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
            /// To sort the returned results please use the standard OData $orderby syntax.
            /// Supported fields are:
            /// - name- project name to order by.
            /// - createdDate- project created date to order by.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only one orderBy field can be used at a time, else a 404  will be returned.
            /// &lt;br /&gt;
            /// Example with Name : /api/texttranslator/v1/projects?$orderby=name desc
            /// &lt;br /&gt;
            /// Example with CreatedDate :
            /// /api/texttranslator/v1/projects?$orderby=createdDate asc
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// The id of the workspace.
            /// </param>
            /// <param name='pageIndex'>
            /// The page index. Default is 1.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter.
            /// </param>
            /// <param name='orderby'>
            /// The OData $orderby parameter.
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorProjectsResponse ApiTexttranslatorV10ProjectsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, string workspaceId, int pageIndex, string filter = default(string), string orderby = default(string))
            {
                return operations.ApiTexttranslatorV10ProjectsGetAsync(authorization, workspaceId, pageIndex, filter, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of projects.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Projects can be filtered using standard OData $filter syntax. Supported
            /// fields and operations:
            /// - Name- project name to filter by. Supported operations are 'eq' and
            /// 'substringof'.
            /// - SourceLanguage- Supported operations are 'eq'.
            /// - TargetLanguage- Supported operations are 'eq'.
            /// - Category- Supported operations are 'eq'.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters.
            /// Also no nested conditions are supported.
            /// &lt;br /&gt;
            /// Example: /api/texttranslator/v1/projects?$filter=substringof(name, 'Project
            /// 1') and status eq 'Deployed' and targetLanguage eq 'de'
            /// &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
            /// To sort the returned results please use the standard OData $orderby syntax.
            /// Supported fields are:
            /// - name- project name to order by.
            /// - createdDate- project created date to order by.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only one orderBy field can be used at a time, else a 404  will be returned.
            /// &lt;br /&gt;
            /// Example with Name : /api/texttranslator/v1/projects?$orderby=name desc
            /// &lt;br /&gt;
            /// Example with CreatedDate :
            /// /api/texttranslator/v1/projects?$orderby=createdDate asc
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// The id of the workspace.
            /// </param>
            /// <param name='pageIndex'>
            /// The page index. Default is 1.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter.
            /// </param>
            /// <param name='orderby'>
            /// The OData $orderby parameter.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorProjectsResponse> ApiTexttranslatorV10ProjectsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, string workspaceId, int pageIndex, string filter = default(string), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10ProjectsGetWithHttpMessagesAsync(authorization, workspaceId, pageIndex, filter, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Create a project.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='project'>
            /// The project to create
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace id
            /// </param>
            public static void ApiTexttranslatorV10ProjectsPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorProjectRequest project, string authorization, string workspaceId)
            {
                operations.ApiTexttranslatorV10ProjectsPostAsync(project, authorization, workspaceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Create a project.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='project'>
            /// The project to create
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10ProjectsPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorProjectRequest project, string authorization, string workspaceId, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10ProjectsPostWithHttpMessagesAsync(project, authorization, workspaceId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the project specified by Id.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id for the project for which details are requested.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static TextTranslatorModelsTextTranslatorProjectInfo ApiTexttranslatorV10ProjectsByIdGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, System.Guid id, string authorization)
            {
                return operations.ApiTexttranslatorV10ProjectsByIdGetAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the project specified by Id.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id for the project for which details are requested.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsTextTranslatorProjectInfo> ApiTexttranslatorV10ProjectsByIdGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, System.Guid id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10ProjectsByIdGetWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates the project.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id of the project to update.
            /// </param>
            /// <param name='project'>
            /// The project to update
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static TextTranslatorModelsTextTranslatorProjectInfo ApiTexttranslatorV10ProjectsByIdPut(this IMicrosoftCustomTranslatorAPIPreview10 operations, System.Guid id, TextTranslatorModelsRequestTextTranslatorProjectUpdateRequest project, string authorization)
            {
                return operations.ApiTexttranslatorV10ProjectsByIdPutAsync(id, project, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates the project.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id of the project to update.
            /// </param>
            /// <param name='project'>
            /// The project to update
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsTextTranslatorProjectInfo> ApiTexttranslatorV10ProjectsByIdPutAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, System.Guid id, TextTranslatorModelsRequestTextTranslatorProjectUpdateRequest project, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10ProjectsByIdPutWithHttpMessagesAsync(id, project, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Delete the current project
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Id of the project
            /// </param>
            /// <param name='authorization'>
            /// access token
            /// </param>
            public static void ApiTexttranslatorV10ProjectsByIdDelete(this IMicrosoftCustomTranslatorAPIPreview10 operations, System.Guid id, string authorization)
            {
                operations.ApiTexttranslatorV10ProjectsByIdDeleteAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Delete the current project
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Id of the project
            /// </param>
            /// <param name='authorization'>
            /// access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10ProjectsByIdDeleteAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, System.Guid id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10ProjectsByIdDeleteWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets all the Models for the given project.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Models can be filtered using standard OData $filter syntax. Supported
            /// fields and operations:
            /// - ModelName - model name to filter by. Supported operations are 'eq' and
            /// 'substringof'.
            /// - DocumentType - Document type to filter. Supported operations are 'eq'.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters.
            /// Also no nested conditions are supported.
            /// &lt;br /&gt;
            /// Example:
            /// /api/texttranslator/v1/projects/{id}/models?$filter=substringof(modelName,
            /// 'Model 1') and documentType eq 'training'
            /// &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
            /// To sort the returned results please use the standard OData $orderby syntax.
            /// Supported fields are:
            /// - name - Model name to order by.
            /// - modifiedDate - Model modified date to order by.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only one orderBy field can be used at a time, else a 404  will be returned.
            /// &lt;br /&gt;
            /// Example with Name : /api/texttranslator/v1/documents?$orderby=name desc
            /// &lt;br /&gt;
            /// Example with ModifiedDate:
            /// /api/texttranslator/v1/documents?$orderby=modifiedDate asc
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='authorization'>
            /// </param>
            /// <param name='pageIndex'>
            /// The page index. Default is 1.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter.
            /// </param>
            /// <param name='orderby'>
            /// The OData $orderby parameter.
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorModelsResponse ApiTexttranslatorV10ProjectsByIdModelsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, System.Guid id, string authorization, int pageIndex, string filter = default(string), string orderby = default(string))
            {
                return operations.ApiTexttranslatorV10ProjectsByIdModelsGetAsync(id, authorization, pageIndex, filter, orderby).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets all the Models for the given project.
            /// </summary>
            /// <remarks>
            /// ### REMARKS ###
            /// Models can be filtered using standard OData $filter syntax. Supported
            /// fields and operations:
            /// - ModelName - model name to filter by. Supported operations are 'eq' and
            /// 'substringof'.
            /// - DocumentType - Document type to filter. Supported operations are 'eq'.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only basic 'and' operator is supported between different field filters.
            /// Also no nested conditions are supported.
            /// &lt;br /&gt;
            /// Example:
            /// /api/texttranslator/v1/projects/{id}/models?$filter=substringof(modelName,
            /// 'Model 1') and documentType eq 'training'
            /// &lt;br /&gt;&lt;br /&gt;&lt;br /&gt;
            /// To sort the returned results please use the standard OData $orderby syntax.
            /// Supported fields are:
            /// - name - Model name to order by.
            /// - modifiedDate - Model modified date to order by.
            /// &lt;br /&gt;&lt;br /&gt;
            /// Only one orderBy field can be used at a time, else a 404  will be returned.
            /// &lt;br /&gt;
            /// Example with Name : /api/texttranslator/v1/documents?$orderby=name desc
            /// &lt;br /&gt;
            /// Example with ModifiedDate:
            /// /api/texttranslator/v1/documents?$orderby=modifiedDate asc
            /// </remarks>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// </param>
            /// <param name='authorization'>
            /// </param>
            /// <param name='pageIndex'>
            /// The page index. Default is 1.
            /// </param>
            /// <param name='filter'>
            /// The OData $filter parameter.
            /// </param>
            /// <param name='orderby'>
            /// The OData $orderby parameter.
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorModelsResponse> ApiTexttranslatorV10ProjectsByIdModelsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, System.Guid id, string authorization, int pageIndex, string filter = default(string), string orderby = default(string), CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10ProjectsByIdModelsGetWithHttpMessagesAsync(id, authorization, pageIndex, filter, orderby, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the list of regions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static IList<TextTranslatorDALRegion> ApiTexttranslatorV10RegionsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization)
            {
                return operations.ApiTexttranslatorV10RegionsGetAsync(authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of regions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TextTranslatorDALRegion>> ApiTexttranslatorV10RegionsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10RegionsGetWithHttpMessagesAsync(authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets the translator text subscription for this workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace id
            /// </param>
            public static TextTranslatorModelsTextTranslatorSubscriptionResponse ApiTexttranslatorV10SubscriptionsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, string workspaceId)
            {
                return operations.ApiTexttranslatorV10SubscriptionsGetAsync(authorization, workspaceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the translator text subscription for this workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace id
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsTextTranslatorSubscriptionResponse> ApiTexttranslatorV10SubscriptionsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, string workspaceId, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10SubscriptionsGetWithHttpMessagesAsync(authorization, workspaceId, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Updates a subscription key
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscription'>
            /// The subscription
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace to add the subscription to
            /// </param>
            public static void ApiTexttranslatorV10SubscriptionsPut(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorSubscriptionRequest subscription, string authorization, string workspaceId)
            {
                operations.ApiTexttranslatorV10SubscriptionsPutAsync(subscription, authorization, workspaceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Updates a subscription key
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscription'>
            /// The subscription
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace to add the subscription to
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10SubscriptionsPutAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorSubscriptionRequest subscription, string authorization, string workspaceId, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10SubscriptionsPutWithHttpMessagesAsync(subscription, authorization, workspaceId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Add a subscription key.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscription'>
            /// The subscription
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace to add the subscription to
            /// </param>
            public static void ApiTexttranslatorV10SubscriptionsPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorSubscriptionRequest subscription, string authorization, string workspaceId)
            {
                operations.ApiTexttranslatorV10SubscriptionsPostAsync(subscription, authorization, workspaceId).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Add a subscription key.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='subscription'>
            /// The subscription
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace to add the subscription to
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10SubscriptionsPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorSubscriptionRequest subscription, string authorization, string workspaceId, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10SubscriptionsPostWithHttpMessagesAsync(subscription, authorization, workspaceId, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Deletes a subscription key.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace id to delete the subscription key from
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static void ApiTexttranslatorV10SubscriptionsDelete(this IMicrosoftCustomTranslatorAPIPreview10 operations, string workspaceId, string authorization)
            {
                operations.ApiTexttranslatorV10SubscriptionsDeleteAsync(workspaceId, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a subscription key.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='workspaceId'>
            /// Workspace id to delete the subscription key from
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10SubscriptionsDeleteAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string workspaceId, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10SubscriptionsDeleteWithHttpMessagesAsync(workspaceId, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the translator text subscription regions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            public static IList<TextTranslatorModelsTextTranslatorBillingRegions> ApiTexttranslatorV10SubscriptionsBillingregionsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization)
            {
                return operations.ApiTexttranslatorV10SubscriptionsBillingregionsGetAsync(authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the translator text subscription regions.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<IList<TextTranslatorModelsTextTranslatorBillingRegions>> ApiTexttranslatorV10SubscriptionsBillingregionsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10SubscriptionsBillingregionsGetWithHttpMessagesAsync(authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets details of a specific test.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The test identifier.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static TextTranslatorModelsTextTranslatorTestInfo ApiTexttranslatorV10TestsByIdGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                return operations.ApiTexttranslatorV10TestsByIdGetAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets details of a specific test.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The test identifier.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsTextTranslatorTestInfo> ApiTexttranslatorV10TestsByIdGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10TestsByIdGetWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Export the test resuls as a zip file.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The test identifier.
            /// </param>
            /// <param name='authorization'>
            /// access token
            /// </param>
            public static MicrosoftAspNetCoreMvcVirtualFileResult ApiTexttranslatorV10TestsByIdExportPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                return operations.ApiTexttranslatorV10TestsByIdExportPostAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Export the test resuls as a zip file.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The test identifier.
            /// </param>
            /// <param name='authorization'>
            /// access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftAspNetCoreMvcVirtualFileResult> ApiTexttranslatorV10TestsByIdExportPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10TestsByIdExportPostWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Gets aligned source, ref, and MT sentences.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The test identifier.
            /// </param>
            /// <param name='authorization'>
            /// access token
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorTestEntriessResponse ApiTexttranslatorV10TestsByIdResultsGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization)
            {
                return operations.ApiTexttranslatorV10TestsByIdResultsGetAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets aligned source, ref, and MT sentences.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The test identifier.
            /// </param>
            /// <param name='authorization'>
            /// access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorTestEntriessResponse> ApiTexttranslatorV10TestsByIdResultsGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, long id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10TestsByIdResultsGetWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Whether or not the user is a current user of Custom Translator.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            public static void ApiTexttranslatorV10UsersIsNewUserGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization)
            {
                operations.ApiTexttranslatorV10UsersIsNewUserGetAsync(authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Whether or not the user is a current user of Custom Translator.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10UsersIsNewUserGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10UsersIsNewUserGetWithHttpMessagesAsync(authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Sets user as an existing user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static void ApiTexttranslatorV10UsersSetExistingUserPut(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization)
            {
                operations.ApiTexttranslatorV10UsersSetExistingUserPutAsync(authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Sets user as an existing user
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10UsersSetExistingUserPutAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10UsersSetExistingUserPutWithHttpMessagesAsync(authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the list of workspaces that the user has access to.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorWorkspacesReponse ApiTexttranslatorV10WorkspacesGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization)
            {
                return operations.ApiTexttranslatorV10WorkspacesGetAsync(authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of workspaces that the user has access to.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorWorkspacesReponse> ApiTexttranslatorV10WorkspacesGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10WorkspacesGetWithHttpMessagesAsync(authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Creates a new workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='newWorkspace'>
            /// Subscription and workspace name
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static void ApiTexttranslatorV10WorkspacesPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorCreateWorkspaceRequest newWorkspace, string authorization)
            {
                operations.ApiTexttranslatorV10WorkspacesPostAsync(newWorkspace, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Creates a new workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='newWorkspace'>
            /// Subscription and workspace name
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10WorkspacesPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorCreateWorkspaceRequest newWorkspace, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10WorkspacesPostWithHttpMessagesAsync(newWorkspace, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the information for a specific workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static TextTranslatorApiModelsTextTranslatorWorkspaceInfo ApiTexttranslatorV10WorkspacesByIdGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string authorization)
            {
                return operations.ApiTexttranslatorV10WorkspacesByIdGetAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the information for a specific workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorApiModelsTextTranslatorWorkspaceInfo> ApiTexttranslatorV10WorkspacesByIdGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10WorkspacesByIdGetWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Deletes a workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static TextTranslatorApiModelsTextTranslatorWorkspaceInfo ApiTexttranslatorV10WorkspacesByIdDelete(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string authorization)
            {
                return operations.ApiTexttranslatorV10WorkspacesByIdDeleteAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Deletes a workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorApiModelsTextTranslatorWorkspaceInfo> ApiTexttranslatorV10WorkspacesByIdDeleteAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10WorkspacesByIdDeleteWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Changes the name of a workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// The new name
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static void ApiTexttranslatorV10WorkspacesByIdNamePut(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorWorkspaceNameRequest name, string id, string authorization)
            {
                operations.ApiTexttranslatorV10WorkspacesByIdNamePutAsync(name, id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Changes the name of a workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='name'>
            /// The new name
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10WorkspacesByIdNamePutAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, TextTranslatorModelsRequestTextTranslatorWorkspaceNameRequest name, string id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10WorkspacesByIdNamePutWithHttpMessagesAsync(name, id, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the list of users with access to a specific workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static TextTranslatorModelsResponseTextTranslatorWorkspaceUsersResponse ApiTexttranslatorV10WorkspacesByIdUsersGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string authorization)
            {
                return operations.ApiTexttranslatorV10WorkspacesByIdUsersGetAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the list of users with access to a specific workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<TextTranslatorModelsResponseTextTranslatorWorkspaceUsersResponse> ApiTexttranslatorV10WorkspacesByIdUsersGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10WorkspacesByIdUsersGetWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

            /// <summary>
            /// Adds users to the workspace. If the user already has permissions to the
            /// workspace, this  will update their level of permissions to whatever is
            /// specified.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='users'>
            /// The users to be added
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static void ApiTexttranslatorV10WorkspacesByIdUsersPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, IList<TextTranslatorModelsRequestTextTranslatorWorkspacePermissionInfo> users, string id, string authorization)
            {
                operations.ApiTexttranslatorV10WorkspacesByIdUsersPostAsync(users, id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Adds users to the workspace. If the user already has permissions to the
            /// workspace, this  will update their level of permissions to whatever is
            /// specified.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='users'>
            /// The users to be added
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10WorkspacesByIdUsersPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, IList<TextTranslatorModelsRequestTextTranslatorWorkspacePermissionInfo> users, string id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10WorkspacesByIdUsersPostWithHttpMessagesAsync(users, id, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Removes a users permissions to the workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='userId'>
            /// The user to be deleted
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            public static void ApiTexttranslatorV10WorkspacesByIdUsersByUserIdDelete(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, long userId, string authorization)
            {
                operations.ApiTexttranslatorV10WorkspacesByIdUsersByUserIdDeleteAsync(id, userId, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Removes a users permissions to the workspace.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The id for the workspace
            /// </param>
            /// <param name='userId'>
            /// The user to be deleted
            /// </param>
            /// <param name='authorization'>
            /// Access token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10WorkspacesByIdUsersByUserIdDeleteAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, long userId, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10WorkspacesByIdUsersByUserIdDeleteWithHttpMessagesAsync(id, userId, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Get the summary for all migration operations on the current workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Workspace Id
            /// </param>
            /// <param name='authorization'>
            /// Authorization token
            /// </param>
            public static void ApiTexttranslatorV10WorkspacesByIdMigrationGet(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string authorization)
            {
                operations.ApiTexttranslatorV10WorkspacesByIdMigrationGetAsync(id, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Get the summary for all migration operations on the current workspace
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// Workspace Id
            /// </param>
            /// <param name='authorization'>
            /// Authorization token
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task ApiTexttranslatorV10WorkspacesByIdMigrationGetAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                (await operations.ApiTexttranslatorV10WorkspacesByIdMigrationGetWithHttpMessagesAsync(id, authorization, null, cancellationToken).ConfigureAwait(false)).Dispose();
            }

            /// <summary>
            /// Gets the details of the migration operation in a zip file.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the workspace
            /// </param>
            /// <param name='migrationId'>
            /// The migration id for which details are served.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            public static MicrosoftAspNetCoreMvcVirtualFileResult ApiTexttranslatorV10WorkspacesByIdExportByMigrationIdPost(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string migrationId, string authorization)
            {
                return operations.ApiTexttranslatorV10WorkspacesByIdExportByMigrationIdPostAsync(id, migrationId, authorization).GetAwaiter().GetResult();
            }

            /// <summary>
            /// Gets the details of the migration operation in a zip file.
            /// </summary>
            /// <param name='operations'>
            /// The operations group for this extension method.
            /// </param>
            /// <param name='id'>
            /// The Id of the workspace
            /// </param>
            /// <param name='migrationId'>
            /// The migration id for which details are served.
            /// </param>
            /// <param name='authorization'>
            /// </param>
            /// <param name='cancellationToken'>
            /// The cancellation token.
            /// </param>
            public static async Task<MicrosoftAspNetCoreMvcVirtualFileResult> ApiTexttranslatorV10WorkspacesByIdExportByMigrationIdPostAsync(this IMicrosoftCustomTranslatorAPIPreview10 operations, string id, string migrationId, string authorization, CancellationToken cancellationToken = default(CancellationToken))
            {
                using (var _result = await operations.ApiTexttranslatorV10WorkspacesByIdExportByMigrationIdPostWithHttpMessagesAsync(id, migrationId, authorization, null, cancellationToken).ConfigureAwait(false))
                {
                    return _result.Body;
                }
            }

    }
}
